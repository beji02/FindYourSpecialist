[{"/Users/victorzarzu/fys1/client/src/index.js":"1","/Users/victorzarzu/fys1/client/src/LoginPage.js":"2","/Users/victorzarzu/fys1/client/src/Home.js":"3","/Users/victorzarzu/fys1/client/src/RegisterPage.js":"4","/Users/victorzarzu/fys1/client/src/App.js":"5","/Users/victorzarzu/fys1/client/src/reportWebVitals.js":"6","/Users/victorzarzu/fys1/client/src/ProfilePage.js":"7","/Users/victorzarzu/fys1/client/src/NavbarHome.js":"8","/Users/victorzarzu/fys1/client/src/FooterHome.js":"9","/Users/victorzarzu/fys1/client/src/SearchBar.js":"10","/Users/victorzarzu/fys1/client/src/AnnouncementList.js":"11","/Users/victorzarzu/fys1/client/src/AnnouncementCard.js":"12"},{"size":1172,"mtime":1684055044413,"results":"13","hashOfConfig":"14"},{"size":3621,"mtime":1684226530046,"results":"15","hashOfConfig":"14"},{"size":1854,"mtime":1684226528973,"results":"16","hashOfConfig":"14"},{"size":5335,"mtime":1684226023513,"results":"17","hashOfConfig":"14"},{"size":712,"mtime":1684010936173,"results":"18","hashOfConfig":"14"},{"size":362,"mtime":1683047289985,"results":"19","hashOfConfig":"14"},{"size":2204,"mtime":1683896252724,"results":"20","hashOfConfig":"14"},{"size":948,"mtime":1683896996757,"results":"21","hashOfConfig":"14"},{"size":717,"mtime":1683535008691,"results":"22","hashOfConfig":"14"},{"size":1188,"mtime":1683535008691,"results":"23","hashOfConfig":"14"},{"size":639,"mtime":1683535008690,"results":"24","hashOfConfig":"14"},{"size":1011,"mtime":1683535008690,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d5viel",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/victorzarzu/fys1/client/src/index.js",[],[],"/Users/victorzarzu/fys1/client/src/LoginPage.js",[],[],"/Users/victorzarzu/fys1/client/src/Home.js",["63","64"],[],"/Users/victorzarzu/fys1/client/src/RegisterPage.js",["65","66","67"],[],"import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport \"./style/RegisterPage.css\";\n\nfunction RegisterPage() {\n    const [registerForm, setRegisterForm] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n\n    const [error, setError] = useState(\"\");\n\n    const handleUpdate = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setRegisterForm({ ...registerForm, [name]: value });\n    };\n\n    return (\n        <div className=\"page-container\">\n            <h1 className=\"tile-title\">Create your fys account</h1>\n            <div className=\"form-container\">\n                <Form>\n                    {error && <p className=\"text-danger\">{error}</p>}\n\n                    <Form.Group className=\"mb-3\" controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name={\"username\"}\n                            placeholder=\"Enter Username\"\n                            value={registerForm.username}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            name={\"email\"}\n                            placeholder=\"Enter Email\"\n                            value={registerForm.email}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            name={\"password\"}\n                            placeholder=\"Enter Password\"\n                            value={registerForm.password}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            name={\"confirmPassword\"}\n                            placeholder=\"Confirm Password\"\n                            value={registerForm.confirmPassword}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            className=\"register-button\"\n                            onClick={async (event) => {\n                                event.preventDefault();\n                                if (\n                                    registerForm.username === \"\" ||\n                                    registerForm.email === \"\" ||\n                                    registerForm.password === \"\" ||\n                                    registerForm.confirmPassword === \"\"\n                                ) {\n                                    setError(\"Please fill all the details\");\n                                } else if (registerForm.password !== registerForm.confirmPassword) {\n                                    setError(\"Passwords do not match\");\n                                } else {\n                                    await fetch(\"register\", {\n                                        method: \"POST\",\n                                        headers: {\n                                            Accept: \"application/json\",\n                                            \"Content-Type\": \"application/json\",\n                                        },\n                                        body: JSON.stringify(registerForm),\n                                    }).then((response) => {\n                                        if (response.status === 200) {\n                                            window.location.href = \"/login\";\n                                        } else {\n                                            console.log(response);\n                                            setError(\"Failed to register\");\n                                        }\n                                    });\n                                }\n                            }}\n                        >\n                            Register\n                        </Button>\n                        <p className=\"mt-3\">\n                            Already have an account?{\" \"}\n                            <a href=\"/login\" className=\"login-link\">\n                                Log in\n                            </a>\n                        </p>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default RegisterPage;\n\n\n","/Users/victorzarzu/fys1/client/src/App.js",[],[],"/Users/victorzarzu/fys1/client/src/reportWebVitals.js",[],[],"/Users/victorzarzu/fys1/client/src/ProfilePage.js",[],[],"/Users/victorzarzu/fys1/client/src/NavbarHome.js",[],[],"/Users/victorzarzu/fys1/client/src/FooterHome.js",[],[],"/Users/victorzarzu/fys1/client/src/SearchBar.js",[],[],"/Users/victorzarzu/fys1/client/src/AnnouncementList.js",[],[],"/Users/victorzarzu/fys1/client/src/AnnouncementCard.js",[],[],{"ruleId":"68","severity":1,"message":"69","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":21},{"ruleId":"68","severity":1,"message":"72","line":9,"column":15,"nodeType":"70","messageId":"71","endLine":9,"endColumn":20},{"ruleId":"68","severity":1,"message":"73","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":18},{"ruleId":"68","severity":1,"message":"74","line":24,"column":11,"nodeType":"70","messageId":"71","endLine":24,"endColumn":28},{"ruleId":"68","severity":1,"message":"75","line":29,"column":11,"nodeType":"70","messageId":"71","endLine":29,"endColumn":32},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'PhoneInput' is defined but never used.","'handlePhoneUpdate' is assigned a value but never used.","'handleBirthDateUpdate' is assigned a value but never used."]
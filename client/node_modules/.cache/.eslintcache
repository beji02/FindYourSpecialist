[{"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\index.js":"1","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\App.js":"2","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\MyAnnouncementsPage.js":"3","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\RegisterPage.js":"4","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\reportWebVitals.js":"5","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\LoginPage.js":"6","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\ProfilePage.js":"7","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\addannouncement\\AddAnnouncementPage.js":"8","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\HomePage.js":"9","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\AnnouncementsPage.js":"10","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\generics\\CustomFooter.js":"11","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\addannouncement\\AddAnnouncementForm.js":"12","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\profile\\UserDataTile.js":"13","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\utils\\roles.js":"14","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\profile\\BecomeSpecialistButton.js":"15","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\profile\\SpecialistDataTile.js":"16","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\generics\\CustomNavbar.js":"17","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\announcement\\AnnouncementsTile.js":"18","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\QuickAccess.js":"19","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\CustomPagination.js":"20","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\Filters.js":"21","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\SearchBar.js":"22","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\announcement\\AnnouncementList.js":"23","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\announcement\\AnnouncementCard.js":"24","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\announcement\\AnnouncementModal.js":"25"},{"size":1483,"mtime":1684756812000,"results":"26","hashOfConfig":"27"},{"size":712,"mtime":1684755920000,"results":"28","hashOfConfig":"27"},{"size":304,"mtime":1684756812000,"results":"29","hashOfConfig":"27"},{"size":5290,"mtime":1684756812000,"results":"30","hashOfConfig":"27"},{"size":362,"mtime":1683755640000,"results":"31","hashOfConfig":"27"},{"size":3769,"mtime":1685085800000,"results":"32","hashOfConfig":"27"},{"size":2117,"mtime":1685084980000,"results":"33","hashOfConfig":"27"},{"size":510,"mtime":1684756812000,"results":"34","hashOfConfig":"27"},{"size":1678,"mtime":1685085800000,"results":"35","hashOfConfig":"27"},{"size":3777,"mtime":1684846488000,"results":"36","hashOfConfig":"27"},{"size":721,"mtime":1684325702000,"results":"37","hashOfConfig":"27"},{"size":5482,"mtime":1684853900000,"results":"38","hashOfConfig":"27"},{"size":9055,"mtime":1685086478000,"results":"39","hashOfConfig":"27"},{"size":160,"mtime":1685084980000,"results":"40","hashOfConfig":"27"},{"size":1314,"mtime":1685084980000,"results":"41","hashOfConfig":"27"},{"size":5018,"mtime":1685084980000,"results":"42","hashOfConfig":"27"},{"size":1455,"mtime":1685085800000,"results":"43","hashOfConfig":"27"},{"size":995,"mtime":1685084980000,"results":"44","hashOfConfig":"27"},{"size":194,"mtime":1685087272000,"results":"45","hashOfConfig":"27"},{"size":1108,"mtime":1685087798000,"results":"46","hashOfConfig":"27"},{"size":1345,"mtime":1685087748000,"results":"47","hashOfConfig":"27"},{"size":806,"mtime":1684756812000,"results":"48","hashOfConfig":"27"},{"size":390,"mtime":1684756812000,"results":"49","hashOfConfig":"27"},{"size":7430,"mtime":1684756812000,"results":"50","hashOfConfig":"27"},{"size":4350,"mtime":1684853900000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g9j5p8",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\index.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\App.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\MyAnnouncementsPage.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\RegisterPage.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\reportWebVitals.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\LoginPage.js",["134"],[],"import React, {useEffect, useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {useNavigate} from \"react-router-dom\";\nimport \"./style/LoginPage.css\";\n\nfunction LoginPage() {\n    const navigate = useNavigate();\n    const [loginForm, setLoginForm] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [error, setError] = useState(\"\");\n\n    const handleUpdate = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setLoginForm({...loginForm, [name]: value});\n    };\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        if (loginForm.username === \"\" || loginForm.password === \"\") {\n            setError(\"Please fill all the details\");\n        } else {\n            try {\n                const response = await fetch(\"login\", {\n                    method: \"POST\",\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(loginForm),\n                });\n                if (response.status === 200) {\n                    const data = await response.json();\n                    const token = data.token;\n                    const roles = data.roles;\n\n                    localStorage.setItem(\"token\", token);\n                    localStorage.setItem(\"roles\", roles);\n\n                    console.log(roles);\n\n                    navigate('/home');\n                } else {\n                    setError(\"Invalid credentials\");\n                }\n            } catch (error) {\n                setError(\"An error occurred. Please try again.\");\n            }\n        }\n    };\n\n\n\n    return (\n        <div className=\"page-container\">\n            <h1 className=\"tile-title\">Login to fys</h1>\n            <div className=\"form-container\">\n                <Form>\n                    {error && <p className=\"text-danger\">{error}</p>}\n\n                    <Form.Group className=\"mb-3\" controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name={\"username\"}\n                            placeholder=\"Enter Username\"\n                            value={loginForm.username}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            name={\"password\"}\n                            placeholder=\"Enter Password\"\n                            value={loginForm.password}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n                    <div className=\"text-center\">\n                        <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            className=\"login-button\"\n                            onClick={handleLogin}\n                        >\n                            Log in\n                        </Button>\n                        <p className=\"mt-3\">\n                            New to the platform?{\" \"}\n                            <a href=\"/register\" className=\"new-account-link\">\n                                Create an account\n                            </a>\n                        </p>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;\n","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\ProfilePage.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\addannouncement\\AddAnnouncementPage.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\HomePage.js",["135","136","137","138","139"],[],"import Container from \"react-bootstrap/Container\";\nimport React, {useEffect, useState} from \"react\";\nimport AnnouncementsPage from \"../AnnouncementsPage\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction HomePage() {\n    const navigate = useNavigate();\n    const [announcements, setAnnouncements] = useState([]);\n    const [selectedFilters, setSelectedFilters] = useState([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(0);\n    const pageSize = 6;\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\");\n        console.log(token);\n        if (!token) {\n            navigate('/login');\n        }\n    });\n\n    const loadAnnouncements = () => {\n        //fetch announcements base on search query and selected filters\n        const filtersQueryParam = selectedFilters.map((filter) => filter.name.toLowerCase()).join(\" \");\n        const url = `announcements?search-query=${searchQuery}&page-number=${pageNumber}&page-size=${pageSize}&search-categories=${filtersQueryParam}`;\n        fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n                setAnnouncements(data);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching announcements:\", error);\n            });\n    };\n\n    const searchAnnouncements = () => {\n        setPageNumber(0);\n        loadAnnouncements();\n    }\n\n    useEffect(() => {\n        loadAnnouncements();\n    }, [pageNumber, pageSize]);\n\n    return (\n        <Container>\n            <AnnouncementsPage includeToken={true} page={0}/>\n        </Container>\n    );\n}\n\nexport default HomePage;","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\AnnouncementsPage.js",["140"],[],"import React, {useEffect, useState} from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport AnnouncementList from \"./home/announcement/AnnouncementList\";\nimport CustomFooter from \"./generics/CustomFooter\";\nimport CustomNavbar from \"./generics/CustomNavbar\";\nimport CustomPagination from \"./home/CustomPagination\";\nimport Filters from \"./home/Filters\";\nimport QuickAccess from \"./home/QuickAccess\";\nimport SearchBar from \"./home/SearchBar\";\n\nfunction AnnouncementsPage({...props}) {\n    const [announcements, setAnnouncements] = useState([]);\n    const [selectedFilters, setSelectedFilters] = useState([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(0);\n    const pageSize = 6;\n\n    const loadAnnouncements = () => {\n        const filtersQueryParam = selectedFilters\n            .map((filter) => filter.name.toLowerCase())\n            .join(\" \");\n        let url = \"\";\n        if (props.page === 0) {\n            console.log(\"page home\");\n            url = `announcements?search-query=${searchQuery}&page-number=${pageNumber}&page-size=${pageSize}&search-categories=${filtersQueryParam}`;\n        } else if (props.page === 1) {\n            console.log(\"page my announcements\");\n            url = `my-announcements?search-query=${searchQuery}&page-number=${pageNumber}&page-size=${pageSize}&search-categories=${filtersQueryParam}`;\n        }\n        if (props.includeToken) {\n            console.log(\"include token\");\n            const token = localStorage.getItem(\"token\");\n            // Include token in headers\n            fetch(url, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    setAnnouncements(data);\n                })\n                .catch((error) => {\n                    console.error(\"Error fetching announcements:\", error);\n                });\n        } else {\n            fetch(url)\n                .then((response) => response.json())\n                .then((data) => {\n                    setAnnouncements(data);\n                })\n                .catch((error) => {\n                    console.error(\"Error fetching announcements:\", error);\n                });\n        }\n    };\n\n    const searchAnnouncements = () => {\n        setPageNumber(0);\n        loadAnnouncements();\n    };\n\n    useEffect(() => {\n        loadAnnouncements();\n    }, [pageNumber, pageSize]);\n\n    return (\n        <Container>\n            <CustomNavbar/>\n            <Container>\n                <Row>\n                    <Col xs={2} lg={2}>\n                        <Container style={{marginTop: \"100px\"}}>\n                            <Filters setSelectedFilters={setSelectedFilters}/>\n                        </Container>\n                    </Col>\n                    <Col xs={8} lg={8}>\n                        <SearchBar\n                            searchAnnouncements={searchAnnouncements}\n                            setSearchQuery={setSearchQuery}\n                        />\n                        <AnnouncementList announcements={announcements}/>\n                        <CustomPagination\n                            announcementsListLength={announcements.length}\n                            pageSize={pageSize}\n                            pageNumber={pageNumber}\n                            setPageNumber={setPageNumber}\n                        />\n                    </Col>\n                    <Col xs={2} lg={2}>\n                        <QuickAccess/>\n                    </Col>\n                </Row>\n            </Container>\n            <CustomFooter/>\n        </Container>\n    );\n}\n\nexport default AnnouncementsPage;\n","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\generics\\CustomFooter.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\addannouncement\\AddAnnouncementForm.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\profile\\UserDataTile.js",["141","142","143"],[],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, Button, Form, InputGroup } from 'react-bootstrap';\nimport 'react-phone-input-2/lib/style.css';\nimport PhoneInput from 'react-phone-input-2';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst UserDataTile = ({ token }) => {\n    const [profileForm, setProfileForm] = useState({\n        firstName: '',\n        lastName: '',\n        username: '',\n        email: '',\n        phoneNumber: '',\n        birthDate: null,\n        updateType: '',\n    });\n\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const handleUpdate = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        setProfileForm({ ...profileForm, [name]: value });\n    };\n\n    const handleSave = (event) => {\n        event.preventDefault();\n\n        console.log(profileForm.updateType);\n\n        try {\n            fetch('user', {\n                method: 'PUT',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: localStorage.getItem('token'),\n                },\n                body: JSON.stringify(profileForm),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSuccess('Profile updated successfully');\n                    } else {\n                        setError('Invalid credentials');\n                    }\n                })\n                .catch((error) => {\n                    setError('An error occurred. Please try again.');\n                });\n        } catch (error) {\n            setError('An error occurred. Please try again.');\n        }\n    };\n\n    useEffect(() => {\n        try {\n            fetch('user', {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: token,\n                },\n            })\n                .then((response) => {\n                    if (response.status == 200) {\n                        return response.json();\n                    }\n                    throw new Error('Something went wrong');\n                })\n                .then((data) => {\n                    setProfileForm({\n                        firstName: data.firstName,\n                        lastName: data.lastName,\n                        username: data.username,\n                        email: data.email,\n                        phoneNumber: data.phoneNumber,\n                        birthDate: data.birthDate ? new Date(data.birthDate) : null,\n                        updateType: 'UPDATE_USER',\n                    });\n                });\n        } catch (error) {\n            setError('An error occurred. Please try again.');\n        }\n    }, []);\n\n    const CustomDatePickerInput = ({ value, onClick }) => (\n        <Form.Control type=\"text\" value={value} onClick={onClick} readOnly />\n    );\n\n    return (\n        <Row className=\"justify-content-md-center mt-5\">\n            <Col md={8}>\n                <h2>Personal info</h2>\n                <Card>\n                    <Card.Body>\n                        {error && <p className=\"text-danger\">{error}</p>}\n                        {success && <p className=\"text-success\">{success}</p>}\n                        <Form>\n                            <Row>\n                                <Col>\n                                    <Form.Group controlId=\"firstName\">\n                                        <Form.Label>First Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"firstName\"\n                                            onChange={handleUpdate}\n                                            value={profileForm.firstName}\n                                            placeholder=\"Enter your first name\"\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                    <Form.Group controlId=\"lastName\">\n                                        <Form.Label>Last Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"lastName\"\n                                            onChange={handleUpdate}\n                                            value={profileForm.lastName}\n                                            placeholder=\"Enter your last name\"\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <Form.Group controlId=\"username\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"username\"\n                                    disabled={true}\n                                    onChange={handleUpdate}\n                                    value={profileForm.username}\n                                    placeholder=\"Enter your username\"\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleUpdate}\n                                    value={profileForm.email}\n                                    placeholder=\"Enter your email\"\n                                />\n                            </Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Group controlId=\"birthDate\">\n                                        <Form.Label>Date of Birth</Form.Label>\n                                        <br />\n                                        <DatePicker\n                                            selected={profileForm.birthDate}\n                                            onChange={(date) =>\n                                                setProfileForm({ ...profileForm, birthDate: date })\n                                            }\n                                            maxDate={new Date()}\n                                            dateFormat=\"yyyy-MM-dd\"\n                                            customInput={<CustomDatePickerInput />}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                    <Form.Group controlId=\"phoneNumber\">\n                                        <Form.Label>Phone Number</Form.Label>\n                                        <InputGroup>\n                                            <PhoneInput\n                                                country={'ro'} // Set the default country\n                                                value={profileForm.phoneNumber}\n                                                onChange={(value) =>\n                                                    handleUpdate({ target: { name: 'phoneNumber', value } })\n                                                }\n                                                inputProps={{\n                                                    className: 'form-control',\n                                                    style: { width: '100%' },\n                                                }}\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <Row className=\"justify-content-end\">\n                                <Col xs={6} md={4} lg={3}>\n                                    <Button\n                                        variant=\"primary\"\n                                        type=\"submit\"\n                                        onClick={handleSave}\n                                        className=\"float-end mt-2\"\n                                    >\n                                        Save Changes\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default UserDataTile;\n","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\utils\\roles.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\profile\\BecomeSpecialistButton.js",["144","145","146","147","148","149"],[],"import React, {useEffect, useState} from 'react';\nimport { Container, Row, Col, Card, Button, Form, InputGroup } from 'react-bootstrap';\nimport 'react-phone-input-2/lib/style.css';\nimport './BecomeSpecialistButton.css';\n\nconst BecomeSpecialistButton = ({ token }) => {\n\n    const [profileForm, setProfileForm] = useState({\n        updateType: '',\n    });\n\n    useEffect(() => {\n        setProfileForm({ ...profileForm, updateType: 'UPGRADE_TO_SPECIALIST' })\n    }, []);\n\n    const handleBecomeSpecialist = (event) => {\n        event.preventDefault();\n\n        console.log(profileForm.updateType);\n\n        try {\n            fetch('user', {\n                method: 'PUT',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: localStorage.getItem('token'),\n                },\n                body: JSON.stringify(profileForm),\n            })\n        } catch (error) {\n            console.log(\"ERROR\")\n        }\n    }\n\n    return (\n        <Col md={8} className=\"mx-auto\">\n            <Button variant=\"primary\" className=\"w-100 mt-4 custom-button\" onClick={handleBecomeSpecialist}>\n                Become a specialist\n            </Button>\n        </Col>\n    );\n};\n\nexport default BecomeSpecialistButton;","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\profile\\SpecialistDataTile.js",["150","151","152","153","154","155","156","157"],[],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, Button, Form, InputGroup } from 'react-bootstrap';\nimport 'react-phone-input-2/lib/style.css';\nimport PhoneInput from 'react-phone-input-2';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n//AIzaSyBZCn63RlKrEgWS1TJdfE-L_DGUWYLDDt0 -- google maps api key\n\nconst SpecialistDataTile = ({ token }) => {\n    const [specialistForm, setSpecialistForm] = useState({\n        location: '',\n        description: '',\n    });\n\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const handleUpdate = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        setSpecialistForm({ ...specialistForm, [name]: value });\n    };\n\n    const handleSave = (event) => {\n        event.preventDefault();\n\n        try {\n            fetch('specialist', {\n                method: 'PUT',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: localStorage.getItem('token'),\n                },\n                body: JSON.stringify(specialistForm),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSuccess('Profile updated successfully');\n                    } else {\n                        setError('Invalid credentials');\n                    }\n                })\n                .catch((error) => {\n                    setError('An error occurred. Please try again.');\n                });\n        } catch (error) {\n            setError('An error occurred. Please try again.');\n        }\n    };\n\n    const [phone, setPhone] = useState('');\n\n    useEffect(() => {\n        try {\n            fetch('specialist', {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: token,\n                },\n            })\n                .then((response) => {\n                    if (response.status == 200) {\n                        return response.json();\n                    }\n                    throw new Error('Something went wrong');\n                })\n                .then((data) => {\n                    setSpecialistForm({\n                        location: data.location,\n                        description: data.description,\n                    });\n                });\n        } catch (error) {\n            setError('An error occurred. Please try again.');\n        }\n    }, []);\n\n    return (\n        <Row className=\"justify-content-md-center mt-5\">\n            <Col md={8}>\n                <h2>Work info</h2>\n                <Card>\n                    <Card.Body>\n                        {error && <p className=\"text-danger\">{error}</p>}\n                        {success && <p className=\"text-success\">{success}</p>}\n                        <Form>\n                            <Form.Group controlId=\"location\">\n                                <Form.Label>Location</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"location\"\n                                    onChange={handleUpdate}\n                                    value={specialistForm.location}\n                                    placeholder=\"Enter your location\"\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"description\">\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    rows={3}\n                                    name=\"description\"\n                                    onChange={handleUpdate}\n                                    value={specialistForm.description}\n                                    placeholder=\"Enter your description\"\n                                />\n                            </Form.Group>\n                            <Row className=\"justify-content-end\">\n                                <Col xs={6} md={4} lg={3}>\n                                    <Button\n                                        variant=\"primary\"\n                                        type=\"submit\"\n                                        onClick={handleSave}\n                                        className=\"float-end mt-2\"\n                                    >\n                                        Save Changes\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default SpecialistDataTile;\n","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\generics\\CustomNavbar.js",["158"],[],"import React, { useEffect } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction CustomNavbar() {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\");\n    });\n\n    const handleProfileClick = () => {\n        navigate(\"/profile\")\n    };\n\n    const handleHomeClick = () => {\n        navigate(\"/home\");\n    }\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Container>\n                <Navbar.Brand>\n                    <Nav.Link onClick={handleHomeClick}>Find your specialist</Nav.Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/addannouncement\">Add your announcement</Nav.Link>\n                        <Nav.Link href=\"/myannouncements\">My announcements</Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link onClick={handleProfileClick}>Profile</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default CustomNavbar;\n","E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\announcement\\AnnouncementsTile.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\QuickAccess.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\CustomPagination.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\Filters.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\SearchBar.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\announcement\\AnnouncementList.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\announcement\\AnnouncementCard.js",[],[],"E:\\NotEnoughMemory\\project_experts\\FindYourSpecialist\\client\\src\\home\\announcement\\AnnouncementModal.js",[],[],{"ruleId":"159","severity":1,"message":"160","line":1,"column":16,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"163","line":8,"column":12,"nodeType":"161","messageId":"162","endLine":8,"endColumn":25},{"ruleId":"159","severity":1,"message":"164","line":9,"column":29,"nodeType":"161","messageId":"162","endLine":9,"endColumn":47},{"ruleId":"159","severity":1,"message":"165","line":10,"column":25,"nodeType":"161","messageId":"162","endLine":10,"endColumn":39},{"ruleId":"159","severity":1,"message":"166","line":36,"column":11,"nodeType":"161","messageId":"162","endLine":36,"endColumn":30},{"ruleId":"167","severity":1,"message":"168","line":43,"column":8,"nodeType":"169","endLine":43,"endColumn":30,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"168","line":65,"column":8,"nodeType":"169","endLine":65,"endColumn":30,"suggestions":"171"},{"ruleId":"159","severity":1,"message":"172","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":70,"column":41,"nodeType":"175","messageId":"176","endLine":70,"endColumn":43},{"ruleId":"167","severity":1,"message":"177","line":89,"column":8,"nodeType":"169","endLine":89,"endColumn":10,"suggestions":"178"},{"ruleId":"159","severity":1,"message":"172","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":19},{"ruleId":"159","severity":1,"message":"179","line":2,"column":21,"nodeType":"161","messageId":"162","endLine":2,"endColumn":24},{"ruleId":"159","severity":1,"message":"180","line":2,"column":31,"nodeType":"161","messageId":"162","endLine":2,"endColumn":35},{"ruleId":"159","severity":1,"message":"181","line":2,"column":45,"nodeType":"161","messageId":"162","endLine":2,"endColumn":49},{"ruleId":"159","severity":1,"message":"182","line":2,"column":51,"nodeType":"161","messageId":"162","endLine":2,"endColumn":61},{"ruleId":"167","severity":1,"message":"183","line":14,"column":8,"nodeType":"169","endLine":14,"endColumn":10,"suggestions":"184"},{"ruleId":"159","severity":1,"message":"172","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":19},{"ruleId":"159","severity":1,"message":"182","line":2,"column":51,"nodeType":"161","messageId":"162","endLine":2,"endColumn":61},{"ruleId":"159","severity":1,"message":"185","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":18},{"ruleId":"159","severity":1,"message":"186","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":18},{"ruleId":"159","severity":1,"message":"187","line":54,"column":12,"nodeType":"161","messageId":"162","endLine":54,"endColumn":17},{"ruleId":"159","severity":1,"message":"188","line":54,"column":19,"nodeType":"161","messageId":"162","endLine":54,"endColumn":27},{"ruleId":"173","severity":1,"message":"174","line":67,"column":41,"nodeType":"175","messageId":"176","endLine":67,"endColumn":43},{"ruleId":"167","severity":1,"message":"177","line":81,"column":8,"nodeType":"169","endLine":81,"endColumn":10,"suggestions":"189"},{"ruleId":"159","severity":1,"message":"190","line":11,"column":15,"nodeType":"161","messageId":"162","endLine":11,"endColumn":20},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'announcements' is assigned a value but never used.","'setSelectedFilters' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","'searchAnnouncements' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadAnnouncements'. Either include it or remove the dependency array.","ArrayExpression",["191"],["192"],"'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["193"],"'Row' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'profileForm'. Either include it or remove the dependency array. You can also do a functional update 'setProfileForm(p => ...)' if you only need 'profileForm' in the 'setProfileForm' call.",["194"],"'PhoneInput' is defined but never used.","'DatePicker' is defined but never used.","'phone' is assigned a value but never used.","'setPhone' is assigned a value but never used.",["195"],"'token' is assigned a value but never used.",{"desc":"196","fix":"197"},{"desc":"196","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"199","fix":"203"},"Update the dependencies array to be: [loadAnnouncements, pageNumber, pageSize]",{"range":"204","text":"205"},{"range":"206","text":"205"},"Update the dependencies array to be: [token]",{"range":"207","text":"208"},"Update the dependencies array to be: [profileForm]",{"range":"209","text":"210"},{"range":"211","text":"208"},[1502,1524],"[loadAnnouncements, pageNumber, pageSize]",[2514,2536],[2985,2987],"[token]",[465,467],"[profileForm]",[2694,2696]]
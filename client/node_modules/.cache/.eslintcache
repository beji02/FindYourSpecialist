[{"/Users/victorzarzu/fys1/client/src/index.js":"1","/Users/victorzarzu/fys1/client/src/ProfilePage.js":"2","/Users/victorzarzu/fys1/client/src/RegisterPage.js":"3","/Users/victorzarzu/fys1/client/src/LoginPage.js":"4","/Users/victorzarzu/fys1/client/src/MyAnnouncementsPage.js":"5","/Users/victorzarzu/fys1/client/src/App.js":"6","/Users/victorzarzu/fys1/client/src/reportWebVitals.js":"7","/Users/victorzarzu/fys1/client/src/home/HomePage.js":"8","/Users/victorzarzu/fys1/client/src/addannouncement/AddAnnouncementPage.js":"9","/Users/victorzarzu/fys1/client/src/AnnouncementsPage.js":"10","/Users/victorzarzu/fys1/client/src/profile/UserDataTile.js":"11","/Users/victorzarzu/fys1/client/src/profile/BecomeSpecialistButton.js":"12","/Users/victorzarzu/fys1/client/src/profile/SpecialistDataTile.js":"13","/Users/victorzarzu/fys1/client/src/utils/roles.js":"14","/Users/victorzarzu/fys1/client/src/home/announcement/AnnouncementsTile.js":"15","/Users/victorzarzu/fys1/client/src/generics/CustomNavbar.js":"16","/Users/victorzarzu/fys1/client/src/generics/CustomFooter.js":"17","/Users/victorzarzu/fys1/client/src/addannouncement/AddAnnouncementForm.js":"18","/Users/victorzarzu/fys1/client/src/home/SearchBar.js":"19","/Users/victorzarzu/fys1/client/src/home/Filters.js":"20","/Users/victorzarzu/fys1/client/src/home/QuickAccess.js":"21","/Users/victorzarzu/fys1/client/src/home/CustomPagination.js":"22","/Users/victorzarzu/fys1/client/src/home/announcement/AnnouncementList.js":"23","/Users/victorzarzu/fys1/client/src/home/announcement/AnnouncementCard.js":"24","/Users/victorzarzu/fys1/client/src/home/announcement/AnnouncementModal.js":"25","/Users/victorzarzu/fys1/client/src/utils/restcalls/user.js":"26","/Users/victorzarzu/fys1/client/src/utils/utils.js":"27","/Users/victorzarzu/fys1/client/src/utils/constants.js":"28","/Users/victorzarzu/fys1/client/src/utils/restcalls/utils.js":"29"},{"size":1483,"mtime":1685089921342,"results":"30","hashOfConfig":"31"},{"size":3334,"mtime":1685870839991,"results":"32","hashOfConfig":"31"},{"size":4355,"mtime":1685535509416,"results":"33","hashOfConfig":"31"},{"size":3224,"mtime":1685436014396,"results":"34","hashOfConfig":"31"},{"size":304,"mtime":1685089921341,"results":"35","hashOfConfig":"31"},{"size":712,"mtime":1684328210169,"results":"36","hashOfConfig":"31"},{"size":362,"mtime":1683047289985,"results":"37","hashOfConfig":"31"},{"size":1840,"mtime":1685825262258,"results":"38","hashOfConfig":"31"},{"size":510,"mtime":1685089921341,"results":"39","hashOfConfig":"31"},{"size":3789,"mtime":1685825262262,"results":"40","hashOfConfig":"31"},{"size":8000,"mtime":1685569566436,"results":"41","hashOfConfig":"31"},{"size":948,"mtime":1685435557266,"results":"42","hashOfConfig":"31"},{"size":4671,"mtime":1685569732517,"results":"43","hashOfConfig":"31"},{"size":204,"mtime":1685824693945,"results":"44","hashOfConfig":"31"},{"size":995,"mtime":1685089734649,"results":"45","hashOfConfig":"31"},{"size":2020,"mtime":1685870878757,"results":"46","hashOfConfig":"31"},{"size":721,"mtime":1685086236665,"results":"47","hashOfConfig":"31"},{"size":5482,"mtime":1685089921341,"results":"48","hashOfConfig":"31"},{"size":806,"mtime":1685089921341,"results":"49","hashOfConfig":"31"},{"size":1345,"mtime":1685089921341,"results":"50","hashOfConfig":"31"},{"size":194,"mtime":1685089921341,"results":"51","hashOfConfig":"31"},{"size":1108,"mtime":1685089921341,"results":"52","hashOfConfig":"31"},{"size":390,"mtime":1685089921342,"results":"53","hashOfConfig":"31"},{"size":7430,"mtime":1685827137881,"results":"54","hashOfConfig":"31"},{"size":4350,"mtime":1685089921342,"results":"55","hashOfConfig":"31"},{"size":2511,"mtime":1685827163358,"results":"56","hashOfConfig":"31"},{"size":416,"mtime":1685823273682,"results":"57","hashOfConfig":"31"},{"size":120,"mtime":1685533809773,"results":"58","hashOfConfig":"31"},{"size":727,"mtime":1685823937401,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"cm2ylv",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/victorzarzu/fys1/client/src/index.js",[],[],[],"/Users/victorzarzu/fys1/client/src/ProfilePage.js",["153"],[],"/Users/victorzarzu/fys1/client/src/RegisterPage.js",[],[],"/Users/victorzarzu/fys1/client/src/LoginPage.js",["154"],[],"import React, {useEffect, useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {useNavigate} from \"react-router-dom\";\nimport \"./style/LoginPage.css\";\nimport {login} from \"./utils/restcalls/user\";\n\nfunction LoginPage() {\n    const navigate = useNavigate();\n    const [loginForm, setLoginForm] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [error, setError] = useState(\"\");\n\n    const handleUpdate = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setLoginForm({...loginForm, [name]: value});\n    };\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        if (loginForm.username === \"\" || loginForm.password === \"\") {\n            setError(\"Please fill all the details\");\n        } else {\n            login(loginForm).then(data => {\n                    const token = data.token;\n                    const roles = data.roles;\n\n                    localStorage.setItem(\"token\", token);\n                    localStorage.setItem(\"roles\", roles);\n\n                    navigate('/home');\n            }).catch(error => setError(\"Invalid credentials\"));\n        }\n    };\n\n\n\n    return (\n        <div className=\"page-container\">\n            <h1 className=\"tile-title\">Login to fys</h1>\n            <div className=\"form-container\">\n                <Form>\n                    {error && <p className=\"text-danger\">{error}</p>}\n\n                    <Form.Group className=\"mb-3\" controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name={\"username\"}\n                            placeholder=\"Enter Username\"\n                            value={loginForm.username}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            name={\"password\"}\n                            placeholder=\"Enter Password\"\n                            value={loginForm.password}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n                    <div className=\"text-center\">\n                        <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            className=\"login-button\"\n                            onClick={handleLogin}\n                        >\n                            Log in\n                        </Button>\n                        <p className=\"mt-3\">\n                            New to the platform?{\" \"}\n                            <a href=\"/register\" className=\"new-account-link\">\n                                Create an account\n                            </a>\n                        </p>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;\n","/Users/victorzarzu/fys1/client/src/MyAnnouncementsPage.js",[],[],"/Users/victorzarzu/fys1/client/src/App.js",[],[],"/Users/victorzarzu/fys1/client/src/reportWebVitals.js",[],[],"/Users/victorzarzu/fys1/client/src/home/HomePage.js",["155","156","157","158","159","160","161"],[],"/Users/victorzarzu/fys1/client/src/addannouncement/AddAnnouncementPage.js",[],[],"/Users/victorzarzu/fys1/client/src/AnnouncementsPage.js",["162","163","164"],[],"/Users/victorzarzu/fys1/client/src/profile/UserDataTile.js",["165","166","167"],[],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, Button, Form, InputGroup } from 'react-bootstrap';\nimport 'react-phone-input-2/lib/style.css';\nimport PhoneInput from 'react-phone-input-2';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst UserDataTile = ({ token, updatePersonalInfoFunc, getPersonalInfoFunc }) => {\n    const [profileForm, setProfileForm] = useState({\n        firstName: '',\n        lastName: '',\n        username: '',\n        email: '',\n        phoneNumber: '',\n        birthDate: null,\n        updateType: '',\n    });\n\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const handleUpdate = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        setProfileForm({ ...profileForm, [name]: value });\n    };\n\n    const handleSave = (event) => {\n        event.preventDefault();\n\n        console.log(profileForm.updateType);\n\n        updatePersonalInfoFunc(profileForm).then(data => {\n            setSuccess('Profile updated successfully');\n        }).catch(error => {\n            setError('An error occurred. Please try again.');\n        })\n    };\n\n    useEffect(() => {\n        getPersonalInfoFunc()\n            .then((data) => {\n                setProfileForm({\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                    username: data.username,\n                    email: data.email,\n                    phoneNumber: data.phoneNumber,\n                    birthDate: data.birthDate ? new Date(data.birthDate) : null,\n                    updateType: 'UPDATE_USER',\n                });\n            }).catch((error) => {\n            setError('An error occurred. Please try again.');\n        });\n    }, []);\n\n    const CustomDatePickerInput = ({ value, onClick }) => (\n        <Form.Control type=\"text\" value={value} onClick={onClick} readOnly />\n    );\n\n    return (\n        <Row className=\"justify-content-md-center mt-5\">\n            <Col md={8}>\n                <h2>Personal info</h2>\n                <Card>\n                    <Card.Body>\n                        {error && <p className=\"text-danger\">{error}</p>}\n                        {success && <p className=\"text-success\">{success}</p>}\n                        <Form>\n                            <Row>\n                                <Col>\n                                    <Form.Group controlId=\"firstName\">\n                                        <Form.Label>First Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"firstName\"\n                                            onChange={handleUpdate}\n                                            value={profileForm.firstName}\n                                            placeholder=\"Enter your first name\"\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                    <Form.Group controlId=\"lastName\">\n                                        <Form.Label>Last Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"lastName\"\n                                            onChange={handleUpdate}\n                                            value={profileForm.lastName}\n                                            placeholder=\"Enter your last name\"\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <Form.Group controlId=\"username\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"username\"\n                                    disabled={true}\n                                    onChange={handleUpdate}\n                                    value={profileForm.username}\n                                    placeholder=\"Enter your username\"\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleUpdate}\n                                    value={profileForm.email}\n                                    placeholder=\"Enter your email\"\n                                />\n                            </Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Group controlId=\"birthDate\">\n                                        <Form.Label>Date of Birth</Form.Label>\n                                        <br />\n                                        <DatePicker\n                                            value={profileForm.birthDate}\n                                            selected={profileForm.birthDate}\n                                            onChange={(date) =>\n                                                setProfileForm({ ...profileForm, birthDate: date })\n                                            }\n                                            maxDate={new Date()}\n                                            dateFormat=\"yyyy-MM-dd\"\n                                            customInput={<CustomDatePickerInput />}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                    <Form.Group controlId=\"phoneNumber\">\n                                        <Form.Label>Phone Number</Form.Label>\n                                        <InputGroup>\n                                            <PhoneInput\n                                                country={'ro'} // Set the default country\n                                                value={profileForm.phoneNumber}\n                                                onChange={(value) =>\n                                                    handleUpdate({ target: { name: 'phoneNumber', value } })\n                                                }\n                                                inputProps={{\n                                                    className: 'form-control',\n                                                    style: { width: '100%' },\n                                                }}\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <Row className=\"justify-content-end\">\n                                <Col xs={6} md={4} lg={3}>\n                                    <Button\n                                        variant=\"primary\"\n                                        type=\"submit\"\n                                        onClick={handleSave}\n                                        className=\"float-end mt-2\"\n                                    >\n                                        Save Changes\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default UserDataTile;\n",[],"/Users/victorzarzu/fys1/client/src/profile/BecomeSpecialistButton.js",["168","169","170","171","172","173"],[],"import React, {useEffect, useState} from 'react';\nimport { Container, Row, Col, Card, Button, Form, InputGroup } from 'react-bootstrap';\nimport 'react-phone-input-2/lib/style.css';\nimport './BecomeSpecialistButton.css';\n\nconst BecomeSpecialistButton = ({ token, upgradeToSpecialistFunc }) => {\n\n    const [profileForm, setProfileForm] = useState({\n        updateType: '',\n    });\n\n    useEffect(() => {\n        setProfileForm({ ...profileForm, updateType: 'UPGRADE_TO_SPECIALIST' })\n    }, []);\n\n    const handleBecomeSpecialist = (event) => {\n        event.preventDefault();\n        console.log(profileForm);\n        upgradeToSpecialistFunc(profileForm);\n    }\n\n    return (\n        <Col md={8} className=\"mx-auto\">\n            <Button variant=\"primary\" className=\"w-100 mt-4 custom-button\" onClick={handleBecomeSpecialist}>\n                Become a specialist\n            </Button>\n        </Col>\n    );\n};\n\nexport default BecomeSpecialistButton;","/Users/victorzarzu/fys1/client/src/profile/SpecialistDataTile.js",["174","175"],[],"import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form } from 'react-bootstrap';\nimport 'react-phone-input-2/lib/style.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport { MAPS_API_KEY } from '../utils/constants'\nimport {updatePersonalInfo} from \"../utils/restcalls/user\";\n\nconst SpecialistDataTile = ({ token, updateWorkInfoFunc, getWorkInfoFunc }) => {\n    const [specialistForm, setSpecialistForm] = useState({\n        location: '',\n        description: '',\n    });\n\n    const [autocomplete, setAutocomplete] = useState(null);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const handleUpdate = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        setSpecialistForm({ ...specialistForm, [name]: value });\n    };\n\n    const handlePlaceSelect = () => {\n        if (autocomplete !== null) {\n            const place = autocomplete.getPlace();\n            const location = place.formatted_address;\n            setSpecialistForm({ ...specialistForm, location });\n        }\n    };\n\n    const handleSave = (event) => {\n        event.preventDefault();\n\n        updateWorkInfoFunc(specialistForm).then(data => {\n            setSuccess('Profile updated successfully');\n        }).catch(error => {\n            setError('An error occurred. Please try again.');\n        })\n    };\n\n    useEffect(() => {\n        getWorkInfoFunc()\n            .then((data) => {\n                setSpecialistForm({\n                    location: data.location,\n                    description: data.description,\n                });\n            }).catch((error) => {\n            setError('An error occurred. Please try again.');\n        });\n    }, []);\n\n    return (\n        <Row className=\"justify-content-md-center mt-5\">\n            <Col md={8}>\n                <h2>Work info</h2>\n                <Card>\n                    <Card.Body>\n                        {error && <p className=\"text-danger\">{error}</p>}\n                        {success && <p className=\"text-success\">{success}</p>}\n                        <Form>\n                            <Form.Group controlId=\"location\">\n                                <Form.Label>Location</Form.Label>\n                                <LoadScript googleMapsApiKey={MAPS_API_KEY} libraries={['places']}>\n                                    <Autocomplete\n                                        onLoad={(autocomplete) => setAutocomplete(autocomplete)}\n                                        onPlaceChanged={handlePlaceSelect}\n                                    >\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"location\"\n                                            onChange={handleUpdate}\n                                            value={specialistForm.location}\n                                            placeholder=\"Enter your location\"\n                                        />\n                                    </Autocomplete>\n                                </LoadScript>\n                            </Form.Group>\n                            <Form.Group controlId=\"description\">\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    rows={3}\n                                    name=\"description\"\n                                    onChange={handleUpdate}\n                                    value={specialistForm.description}\n                                    placeholder=\"Enter your description\"\n                                />\n                            </Form.Group>\n                            <Row className=\"justify-content-end\">\n                                <Col xs={6} md={4} lg={3}>\n                                    <Button\n                                        variant=\"primary\"\n                                        type=\"submit\"\n                                        onClick={handleSave}\n                                        className=\"float-end mt-2\"\n                                    >\n                                        Save Changes\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default SpecialistDataTile;\n","/Users/victorzarzu/fys1/client/src/utils/roles.js",["176","177"],[],"/Users/victorzarzu/fys1/client/src/home/announcement/AnnouncementsTile.js",[],[],"/Users/victorzarzu/fys1/client/src/generics/CustomNavbar.js",["178"],[],"/Users/victorzarzu/fys1/client/src/generics/CustomFooter.js",[],[],"/Users/victorzarzu/fys1/client/src/addannouncement/AddAnnouncementForm.js",[],[],"/Users/victorzarzu/fys1/client/src/home/SearchBar.js",[],[],"/Users/victorzarzu/fys1/client/src/home/Filters.js",[],[],"/Users/victorzarzu/fys1/client/src/home/QuickAccess.js",[],[],"/Users/victorzarzu/fys1/client/src/home/CustomPagination.js",[],[],"/Users/victorzarzu/fys1/client/src/home/announcement/AnnouncementList.js",[],[],"/Users/victorzarzu/fys1/client/src/home/announcement/AnnouncementCard.js",[],[],"/Users/victorzarzu/fys1/client/src/home/announcement/AnnouncementModal.js",[],[],"/Users/victorzarzu/fys1/client/src/utils/restcalls/user.js",["179","180"],[],"/Users/victorzarzu/fys1/client/src/utils/utils.js",[],[],"/Users/victorzarzu/fys1/client/src/utils/constants.js",[],[],"/Users/victorzarzu/fys1/client/src/utils/restcalls/utils.js",[],[],{"ruleId":"181","severity":1,"message":"182","line":11,"column":9,"nodeType":"183","messageId":"184","endLine":11,"endColumn":17},{"ruleId":"181","severity":1,"message":"185","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":6,"column":9,"nodeType":"183","messageId":"184","endLine":6,"endColumn":17},{"ruleId":"181","severity":1,"message":"186","line":10,"column":11,"nodeType":"183","messageId":"184","endLine":10,"endColumn":19},{"ruleId":"181","severity":1,"message":"187","line":11,"column":12,"nodeType":"183","messageId":"184","endLine":11,"endColumn":25},{"ruleId":"181","severity":1,"message":"188","line":12,"column":29,"nodeType":"183","messageId":"184","endLine":12,"endColumn":47},{"ruleId":"181","severity":1,"message":"189","line":13,"column":25,"nodeType":"183","messageId":"184","endLine":13,"endColumn":39},{"ruleId":"181","severity":1,"message":"190","line":36,"column":11,"nodeType":"183","messageId":"184","endLine":36,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":43,"column":8,"nodeType":"193","endLine":43,"endColumn":30,"suggestions":"194"},{"ruleId":"181","severity":1,"message":"195","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":10,"column":9,"nodeType":"183","messageId":"184","endLine":10,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":66,"column":8,"nodeType":"193","endLine":66,"endColumn":30,"suggestions":"196"},{"ruleId":"181","severity":1,"message":"197","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":52,"column":41,"nodeType":"200","messageId":"201","endLine":52,"endColumn":43},{"ruleId":"191","severity":1,"message":"202","line":71,"column":8,"nodeType":"193","endLine":71,"endColumn":10,"suggestions":"203"},{"ruleId":"181","severity":1,"message":"197","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":19},{"ruleId":"181","severity":1,"message":"204","line":2,"column":21,"nodeType":"183","messageId":"184","endLine":2,"endColumn":24},{"ruleId":"181","severity":1,"message":"205","line":2,"column":31,"nodeType":"183","messageId":"184","endLine":2,"endColumn":35},{"ruleId":"181","severity":1,"message":"206","line":2,"column":45,"nodeType":"183","messageId":"184","endLine":2,"endColumn":49},{"ruleId":"181","severity":1,"message":"207","line":2,"column":51,"nodeType":"183","messageId":"184","endLine":2,"endColumn":61},{"ruleId":"191","severity":1,"message":"208","line":14,"column":8,"nodeType":"193","endLine":14,"endColumn":10,"suggestions":"209"},{"ruleId":"181","severity":1,"message":"210","line":7,"column":9,"nodeType":"183","messageId":"184","endLine":7,"endColumn":27},{"ruleId":"191","severity":1,"message":"202","line":69,"column":8,"nodeType":"193","endLine":69,"endColumn":10,"suggestions":"211"},{"ruleId":"198","severity":1,"message":"212","line":2,"column":18,"nodeType":"200","messageId":"201","endLine":2,"endColumn":20},{"ruleId":"198","severity":1,"message":"212","line":6,"column":18,"nodeType":"200","messageId":"201","endLine":6,"endColumn":20},{"ruleId":"191","severity":1,"message":"213","line":14,"column":5,"nodeType":"183","endLine":14,"endColumn":14,"suggestions":"214"},{"ruleId":"181","severity":1,"message":"215","line":1,"column":9,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"216","line":1,"column":15,"nodeType":"183","messageId":"184","endLine":1,"endColumn":21},"no-unused-vars","'isLogged' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","'announcements' is assigned a value but never used.","'setSelectedFilters' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","'searchAnnouncements' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadAnnouncements'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'CustomNavbar' is defined but never used.",["218"],"'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["219"],"'Row' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'profileForm'. Either include it or remove the dependency array. You can also do a functional update 'setProfileForm(p => ...)' if you only need 'profileForm' in the 'setProfileForm' call.",["220"],"'updatePersonalInfo' is defined but never used.",["221"],"Expected '!==' and instead saw '!='.","React Hook useEffect contains a call to 'setLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["222"],"'json' is defined but never used.","'status' is defined but never used.",{"desc":"223","fix":"224"},{"desc":"223","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"226","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [loadAnnouncements, pageNumber, pageSize]",{"range":"233","text":"234"},{"range":"235","text":"234"},"Update the dependencies array to be: [token]",{"range":"236","text":"237"},"Update the dependencies array to be: [profileForm]",{"range":"238","text":"239"},{"range":"240","text":"237"},"Add dependencies array: []",{"range":"241","text":"242"},[1577,1599],"[loadAnnouncements, pageNumber, pageSize]",[2554,2576],[2374,2376],"[token]",[490,492],"[profileForm]",[2346,2348],[508,508],", []"]
{"ast":null,"code":"var _jsxFileName = \"E:\\\\NotEnoughMemory\\\\project_experts\\\\FindYourSpecialist\\\\client\\\\src\\\\home\\\\announcement\\\\AnnouncementModal.js\",\n  _s = $RefreshSig$();\nimport { Modal } from \"react-bootstrap\";\nimport DatePicker, { DateObject } from \"react-multi-date-picker\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnnouncementModal(_ref) {\n  _s();\n  let {\n    announcement,\n    showModal,\n    handleModalToggle\n  } = _ref;\n  const [selectedDays, setSelectedDays] = useState([]);\n  const handleScheduleClick = () => {\n    // Handle the logic for scheduling here\n  };\n  const handleOwnerClick = () => {\n    // Handle the logic for opening the owner's profile here\n  };\n  function isAvailable(date) {\n    let actualDate = new Date(date.toString());\n    actualDate.setHours(0, 0, 0, 0);\n\n    // check that announcement.reservations has a reservation with the same date and not a user\n    for (let i = 0; i < announcement.reservations.length; i++) {\n      let reservationDate = new Date(announcement.reservations[i].date);\n      reservationDate.setHours(0, 0, 0, 0);\n\n      //console.log(date.getTime());\n\n      //console.log(actualDate);\n      //console.log(reservationDate);\n      //console.log(actualDate.getTime() === reservationDate.getTime());\n\n      if (actualDate.getTime() === reservationDate.getTime() && announcement.reservations[i].user === null) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: showModal,\n    onHide: handleModalToggle,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: announcement.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Owner: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"owner-link\",\n            onClick: handleOwnerClick,\n            children: announcement.owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", announcement.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current rating: \", announcement.rate, \"/5 \\u2605\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", announcement.startDate, \" - \", announcement.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        multiple: true,\n        value: selectedDays,\n        onChange: value => {\n          setSelectedDays(value);\n        },\n        mapDays: _ref2 => {\n          let {\n            date\n          } = _ref2;\n          if (!isAvailable(date)) return {\n            disabled: true,\n            style: {\n              color: \"#ccc\"\n            }\n          };\n        },\n        minDate: new DateObject()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleScheduleClick,\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleModalToggle,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(AnnouncementModal, \"mhvBv9s6tWdWFtcYGIW+fEN3x+c=\");\n_c = AnnouncementModal;\nexport default AnnouncementModal;\nvar _c;\n$RefreshReg$(_c, \"AnnouncementModal\");","map":{"version":3,"names":["Modal","DatePicker","DateObject","React","useState","jsxDEV","_jsxDEV","AnnouncementModal","_ref","_s","announcement","showModal","handleModalToggle","selectedDays","setSelectedDays","handleScheduleClick","handleOwnerClick","isAvailable","date","actualDate","Date","toString","setHours","i","reservations","length","reservationDate","getTime","user","show","onHide","children","Header","closeButton","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","onClick","owner","description","rate","startDate","endDate","multiple","value","onChange","mapDays","_ref2","disabled","style","color","minDate","Footer","_c","$RefreshReg$"],"sources":["E:/NotEnoughMemory/project_experts/FindYourSpecialist/client/src/home/announcement/AnnouncementModal.js"],"sourcesContent":["import { Modal } from \"react-bootstrap\";\nimport DatePicker, {DateObject} from \"react-multi-date-picker\";\nimport React, {useState} from \"react\";\n\nfunction AnnouncementModal({ announcement, showModal, handleModalToggle }) {\n    const [selectedDays, setSelectedDays] = useState([]);\n\n    const handleScheduleClick = () => {\n        // Handle the logic for scheduling here\n    };\n\n    const handleOwnerClick = () => {\n        // Handle the logic for opening the owner's profile here\n    };\n\n    function isAvailable(date) {\n        let actualDate = new Date(date.toString());\n        actualDate.setHours(0, 0, 0, 0);\n\n        // check that announcement.reservations has a reservation with the same date and not a user\n        for(let i = 0; i < announcement.reservations.length; i++) {\n            let reservationDate = new Date(announcement.reservations[i].date);\n            reservationDate.setHours(0, 0, 0, 0);\n\n            //console.log(date.getTime());\n\n            //console.log(actualDate);\n            //console.log(reservationDate);\n            //console.log(actualDate.getTime() === reservationDate.getTime());\n\n            if(actualDate.getTime() === reservationDate.getTime() && announcement.reservations[i].user === null) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    return (\n        <Modal show={showModal} onHide={handleModalToggle}>\n            <Modal.Header closeButton>\n                <Modal.Title>{announcement.title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    <p>Owner: <span className=\"owner-link\" onClick={handleOwnerClick}>{announcement.owner}</span></p>\n                </div>\n                <p>Description: {announcement.description}</p>\n                <p>Current rating: {announcement.rate}/5 &#x2605;</p>\n                <p>\n                    Date: {announcement.startDate} - {announcement.endDate}\n                </p>\n                <DatePicker\n                    multiple\n                    value={selectedDays}\n                    onChange={(value) => {setSelectedDays(value)}}\n                    mapDays={({ date }) => {\n\n                        if(!isAvailable(date)) return {\n                            disabled: true,\n                            style: { color: \"#ccc\" },\n                        }\n                    }}\n\n                    minDate={new DateObject()}\n                />\n                {/* Include any additional details here */}\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-primary\" onClick={handleScheduleClick}>\n                    Schedule\n                </button>\n                <button className=\"btn btn-secondary\" onClick={handleModalToggle}>\n                    Close\n                </button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default AnnouncementModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
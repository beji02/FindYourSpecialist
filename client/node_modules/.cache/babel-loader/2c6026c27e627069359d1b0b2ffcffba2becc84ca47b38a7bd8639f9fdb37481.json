{"ast":null,"code":"var _jsxFileName = \"E:\\\\NotEnoughMemory\\\\project_experts\\\\FindYourSpecialist\\\\client\\\\src\\\\home\\\\Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filters(_ref) {\n  _s();\n  let {\n    setSelectedFilters\n  } = _ref;\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    fetch(\"fields\").then(response => response.json()).then(data => {\n      setFilters(data);\n    }).catch(error => {\n      console.error(\"Error fetching fields:\", error);\n    });\n  }, []);\n  function handleFilterSelect(filter) {\n    setSelectedFilters(prevState => {\n      const updatedFilters = [...prevState];\n      if (updatedFilters.includes(filter)) {\n        // Filter already selected, remove it\n        updatedFilters.splice(updatedFilters.indexOf(filter), 1);\n      } else {\n        // Filter not selected, add it\n        updatedFilters.push(filter);\n      }\n      console.log(updatedFilters);\n      return updatedFilters;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Fields\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), filters.map(filter => /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"checkbox\",\n      label: filter.name,\n      onClick: () => handleFilterSelect(filter)\n    }, filter.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Filters, \"32gP0SeFR4dvXIorpf4OzJGpVeY=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useEffect","useState","Form","jsxDEV","_jsxDEV","Filters","_ref","_s","setSelectedFilters","filters","setFilters","fetch","then","response","json","data","catch","error","console","handleFilterSelect","filter","prevState","updatedFilters","includes","splice","indexOf","push","log","children","Label","fileName","_jsxFileName","lineNumber","columnNumber","map","Check","type","label","name","onClick","id","_c","$RefreshReg$"],"sources":["E:/NotEnoughMemory/project_experts/FindYourSpecialist/client/src/home/Filters.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nfunction Filters({setSelectedFilters}) {\r\n    const [filters, setFilters] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"fields\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFilters(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching fields:\", error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    function handleFilterSelect(filter) {\r\n        setSelectedFilters(prevState => {\r\n            const updatedFilters = [...prevState];\r\n\r\n            if (updatedFilters.includes(filter)) {\r\n                // Filter already selected, remove it\r\n                updatedFilters.splice(updatedFilters.indexOf(filter), 1);\r\n            } else {\r\n                // Filter not selected, add it\r\n                updatedFilters.push(filter);\r\n            }\r\n\r\n            console.log(updatedFilters);\r\n            return updatedFilters;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Label>Fields</Form.Label>\r\n            {filters.map((filter) => (\r\n                <Form.Check type=\"checkbox\" key={filter.id} label={filter.name}\r\n                            onClick={() => handleFilterSelect(filter)}/>\r\n            ))}\r\n        </Form>\r\n    );\r\n}\r\nexport default Filters;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,IAAI,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,OAAOA,CAAAC,IAAA,EAAuB;EAAAC,EAAA;EAAA,IAAtB;IAACC;EAAkB,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,QAAQ,CAAC,CACVC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZL,UAAU,CAACK,IAAI,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAGN,SAASE,kBAAkBA,CAACC,MAAM,EAAE;IAChCZ,kBAAkB,CAACa,SAAS,IAAI;MAC5B,MAAMC,cAAc,GAAG,CAAC,GAAGD,SAAS,CAAC;MAErC,IAAIC,cAAc,CAACC,QAAQ,CAACH,MAAM,CAAC,EAAE;QACjC;QACAE,cAAc,CAACE,MAAM,CAACF,cAAc,CAACG,OAAO,CAACL,MAAM,CAAC,EAAE,CAAC,CAAC;MAC5D,CAAC,MAAM;QACH;QACAE,cAAc,CAACI,IAAI,CAACN,MAAM,CAAC;MAC/B;MAEAF,OAAO,CAACS,GAAG,CAACL,cAAc,CAAC;MAC3B,OAAOA,cAAc;IACzB,CAAC,CAAC;EACN;EAEA,oBACIlB,OAAA,CAACF,IAAI;IAAA0B,QAAA,gBACDxB,OAAA,CAACF,IAAI,CAAC2B,KAAK;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa,EAC9BxB,OAAO,CAACyB,GAAG,CAAEd,MAAM,iBAChBhB,OAAA,CAACF,IAAI,CAACiC,KAAK;MAACC,IAAI,EAAC,UAAU;MAAiBC,KAAK,EAAEjB,MAAM,CAACkB,IAAK;MACnDC,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAACC,MAAM;IAAE,GADrBA,MAAM,CAACoB,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEf;AAAC1B,EAAA,CAzCQF,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AA0ChB,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/victorzarzu/fys1/client/src/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport CustomNavbar from \"./generics/CustomNavbar\";\nimport 'react-phone-input-2/lib/style.css';\nimport UserDataTile from \"./profile/UserDataTile\";\nimport BecomeSpecialistButton from \"./profile/BecomeSpecialistButton\";\nimport { isSpecialist as checkIsSpecialist } from \"./utils/roles\";\nimport SpecialistDataTile from \"./profile/SpecialistDataTile\";\nimport AnnouncementsTile from \"./home/announcement/AnnouncementsTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [isUserSpecialist, setIsUserSpecialist] = useState(false);\n  const [recentlyVisitedAnnouncements, setRecentlyVisitedAnnouncements] = useState([]);\n  const loadRecentlyVisitedAnnouncements = () => {\n    //fetch announcements base on search query and selected filters\n    const url = `users/recently-visited-announcements`;\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: localStorage.getItem(\"token\")\n      }\n    }).then(response => response.json()).then(data => {\n      setRecentlyVisitedAnnouncements(data);\n    }).catch(error => {\n      console.error(\"Error fetching announcements:\", error);\n    });\n  };\n  useEffect(() => {\n    const userRoles = localStorage.getItem(\"roles\");\n    const specialistStatus = checkIsSpecialist(userRoles);\n    setIsUserSpecialist(specialistStatus);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserDataTile, {\n      token: localStorage.getItem(\"token\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), !isUserSpecialist && /*#__PURE__*/_jsxDEV(BecomeSpecialistButton, {\n      token: localStorage.getItem(\"token\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 35\n    }, this), isUserSpecialist && /*#__PURE__*/_jsxDEV(SpecialistDataTile, {\n      token: localStorage.getItem(\"token\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }, this), !isUserSpecialist && /*#__PURE__*/_jsxDEV(AnnouncementsTile, {\n      title: \"Recently visited\",\n      announcements: recentlyVisitedAnnouncements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"Gr9azqkGxDI1hwP2M7l7RAkPZms=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","Container","CustomNavbar","UserDataTile","BecomeSpecialistButton","isSpecialist","checkIsSpecialist","SpecialistDataTile","AnnouncementsTile","jsxDEV","_jsxDEV","ProfilePage","_s","isUserSpecialist","setIsUserSpecialist","recentlyVisitedAnnouncements","setRecentlyVisitedAnnouncements","loadRecentlyVisitedAnnouncements","url","fetch","method","headers","Accept","Authorization","localStorage","getItem","then","response","json","data","catch","error","console","userRoles","specialistStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","token","title","announcements","_c","$RefreshReg$"],"sources":["/Users/victorzarzu/fys1/client/src/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport CustomNavbar from \"./generics/CustomNavbar\";\nimport 'react-phone-input-2/lib/style.css';\nimport UserDataTile from \"./profile/UserDataTile\";\nimport BecomeSpecialistButton from \"./profile/BecomeSpecialistButton\";\nimport { isSpecialist as checkIsSpecialist } from \"./utils/roles\";\nimport SpecialistDataTile from \"./profile/SpecialistDataTile\";\nimport AnnouncementsTile from \"./home/announcement/AnnouncementsTile\";\n\nconst ProfilePage = () => {\n    const [isUserSpecialist, setIsUserSpecialist] = useState(false);\n    const [recentlyVisitedAnnouncements, setRecentlyVisitedAnnouncements] = useState([]);\n\n    const loadRecentlyVisitedAnnouncements = () => {\n        //fetch announcements base on search query and selected filters\n        const url = `users/recently-visited-announcements`;\n        fetch(url, {\n            method: 'GET',\n                headers: {\n                Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: localStorage.getItem(\"token\"),\n            },\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                setRecentlyVisitedAnnouncements(data);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching announcements:\", error);\n            });\n    };\n\n    useEffect(() => {\n        const userRoles = localStorage.getItem(\"roles\");\n        const specialistStatus = checkIsSpecialist(userRoles);\n        setIsUserSpecialist(specialistStatus);\n    }, []);\n\n    return (\n        <Container>\n            <CustomNavbar />\n            <UserDataTile token={localStorage.getItem(\"token\")} />\n            {!isUserSpecialist && <BecomeSpecialistButton token={localStorage.getItem(\"token\")} />}\n            {isUserSpecialist && <SpecialistDataTile token={localStorage.getItem(\"token\")} />}\n            {!isUserSpecialist && <AnnouncementsTile title=\"Recently visited\" announcements={recentlyVisitedAnnouncements} />}\n        </Container>\n    );\n}\n\nexport default ProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAO,mCAAmC;AAC1C,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,sBAAsB,MAAM,kCAAkC;AACrE,SAASC,YAAY,IAAIC,iBAAiB,QAAQ,eAAe;AACjE,OAAOC,kBAAkB,MAAM,8BAA8B;AAC7D,OAAOC,iBAAiB,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACe,4BAA4B,EAAEC,+BAA+B,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpF,MAAMiB,gCAAgC,GAAGA,CAAA,KAAM;IAC3C;IACA,MAAMC,GAAG,GAAI,sCAAqC;IAClDC,KAAK,CAACD,GAAG,EAAE;MACPE,MAAM,EAAE,KAAK;MACTC,OAAO,EAAE;QACTC,MAAM,EAAE,kBAAkB;QACtB,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MACnD;IACJ,CAAC,CAAC,CACGC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZb,+BAA+B,CAACa,IAAI,CAAC;IACzC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACV,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZ,MAAMkC,SAAS,GAAGT,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC/C,MAAMS,gBAAgB,GAAG5B,iBAAiB,CAAC2B,SAAS,CAAC;IACrDnB,mBAAmB,CAACoB,gBAAgB,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIxB,OAAA,CAACT,SAAS;IAAAkC,QAAA,gBACNzB,OAAA,CAACR,YAAY;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChB7B,OAAA,CAACP,YAAY;MAACqC,KAAK,EAAEhB,YAAY,CAACC,OAAO,CAAC,OAAO;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACrD,CAAC1B,gBAAgB,iBAAIH,OAAA,CAACN,sBAAsB;MAACoC,KAAK,EAAEhB,YAAY,CAACC,OAAO,CAAC,OAAO;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACrF1B,gBAAgB,iBAAIH,OAAA,CAACH,kBAAkB;MAACiC,KAAK,EAAEhB,YAAY,CAACC,OAAO,CAAC,OAAO;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAChF,CAAC1B,gBAAgB,iBAAIH,OAAA,CAACF,iBAAiB;MAACiC,KAAK,EAAC,kBAAkB;MAACC,aAAa,EAAE3B;IAA6B;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzG;AAEpB,CAAC;AAAA3B,EAAA,CAvCKD,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/victorzarzu/fys1/client/src/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./style/LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const handleUpdate = event => {\n    let name = event.target.name;\n    let value = event.target.value;\n    setLoginForm({\n      ...loginForm,\n      [name]: value\n    });\n  };\n  const handleLogin = async event => {\n    event.preventDefault();\n    if (loginForm.username === \"\" || loginForm.password === \"\") {\n      setError(\"Please fill all the details\");\n    } else {\n      try {\n        const response = await fetch(\"login\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(loginForm)\n        });\n        if (response.status === 200) {\n          const data = await response.json();\n          const token = data.token;\n          const roles = data.roles;\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"roles\", roles);\n          console.log(roles);\n          navigate('/home');\n        } else {\n          setError(\"Invalid credentials\");\n        }\n      } catch (error) {\n        setError(\"An error occurred. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tile-title\",\n      children: \"Login to fys\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Enter Username\",\n            value: loginForm.username,\n            onChange: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter Password\",\n            value: loginForm.password,\n            onChange: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"login-button\",\n            onClick: handleLogin,\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-3\",\n            children: [\"New to the platform?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/register\",\n              className: \"new-account-link\",\n              children: \"Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"CkxKjrdzoINHOOmGUV0ueYWMFQA=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","loginForm","setLoginForm","username","password","error","setError","handleUpdate","event","name","target","value","handleLogin","preventDefault","response","fetch","method","headers","Accept","body","JSON","stringify","status","data","json","token","roles","localStorage","setItem","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","onChange","variant","onClick","href","_c","$RefreshReg$"],"sources":["/Users/victorzarzu/fys1/client/src/LoginPage.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./style/LoginPage.css\";\n\nfunction LoginPage() {\n    const navigate = useNavigate();\n    const [loginForm, setLoginForm] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [error, setError] = useState(\"\");\n\n    const handleUpdate = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setLoginForm({ ...loginForm, [name]: value });\n    };\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        if (loginForm.username === \"\" || loginForm.password === \"\") {\n            setError(\"Please fill all the details\");\n        } else {\n            try {\n                const response = await fetch(\"login\", {\n                    method: \"POST\",\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(loginForm),\n                });\n                if (response.status === 200) {\n                    const data = await response.json();\n                    const token = data.token;\n                    const roles = data.roles;\n\n                    localStorage.setItem(\"token\", token);\n                    localStorage.setItem(\"roles\", roles);\n\n                    console.log(roles);\n\n                    navigate('/home');\n                } else {\n                    setError(\"Invalid credentials\");\n                }\n            } catch (error) {\n                setError(\"An error occurred. Please try again.\");\n            }\n        }\n    };\n\n\n\n    return (\n        <div className=\"page-container\">\n            <h1 className=\"tile-title\">Login to fys</h1>\n            <div className=\"form-container\">\n                <Form>\n                    {error && <p className=\"text-danger\">{error}</p>}\n\n                    <Form.Group className=\"mb-3\" controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name={\"username\"}\n                            placeholder=\"Enter Username\"\n                            value={loginForm.username}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            name={\"password\"}\n                            placeholder=\"Enter Password\"\n                            value={loginForm.password}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n                    <div className=\"text-center\">\n                        <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            className=\"login-button\"\n                            onClick={handleLogin}\n                        >\n                            Log in\n                        </Button>\n                        <p className=\"mt-3\">\n                            New to the platform?{\" \"}\n                            <a href=\"/register\" className=\"new-account-link\">\n                                Create an account\n                            </a>\n                        </p>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
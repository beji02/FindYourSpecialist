{"ast":null,"code":"var _jsxFileName = \"/Users/victorzarzu/fys1/client/src/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./style/LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const handleUpdate = event => {\n    let name = event.target.name;\n    let value = event.target.value;\n    setLoginForm({\n      ...loginForm,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tile-title\",\n      children: \"Login to fys\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Enter Username\",\n            value: loginForm.username,\n            onChange: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter Password\",\n            value: loginForm.password,\n            onChange: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"login-button\",\n            onClick: async event => {\n              event.preventDefault();\n              if (loginForm.username === \"\" || loginForm.password === \"\") {\n                setError(\"Please fill all the details\");\n              } else {\n                await fetch(\"login\", {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(loginForm)\n                }).then(response => {\n                  if (response.status === 200) {\n                    const token = response.jwt;\n                    localStorage.setItem(\"token\", token);\n                    window.location.href = \"/home\";\n                  } else {\n                    setError(\"Invalid credentials\");\n                  }\n                });\n              }\n            },\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-3\",\n            children: [\"New to the platform?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/register\",\n              className: \"new-account-link\",\n              children: \"Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"TDhk6EOA0PmBp29kzbug47Rb5wQ=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Button","Form","jsxDEV","_jsxDEV","LoginPage","_s","loginForm","setLoginForm","username","password","error","setError","handleUpdate","event","name","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","onChange","variant","onClick","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","token","jwt","localStorage","setItem","window","location","href","_c","$RefreshReg$"],"sources":["/Users/victorzarzu/fys1/client/src/LoginPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./style/LoginPage.css\";\n\nfunction LoginPage() {\n    const [loginForm, setLoginForm] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [error, setError] = useState(\"\");\n\n    const handleUpdate = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setLoginForm({ ...loginForm, [name]: value });\n    };\n\n    return (\n        <div className=\"page-container\">\n            <h1 className=\"tile-title\">Login to fys</h1>\n            <div className=\"form-container\">\n\n                <Form>\n                    {error && <p className=\"text-danger\">{error}</p>}\n\n                    <Form.Group className=\"mb-3\" controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name={\"username\"}\n                            placeholder=\"Enter Username\"\n                            value={loginForm.username}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            name={\"password\"}\n                            placeholder=\"Enter Password\"\n                            value={loginForm.password}\n                            onChange={handleUpdate}\n                        />\n                    </Form.Group>\n                    <div className=\"text-center\">\n                        <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            className=\"login-button\"\n                            onClick={async (event) => {\n                                event.preventDefault();\n                                if (loginForm.username === \"\" || loginForm.password === \"\") {\n                                    setError(\"Please fill all the details\");\n                                } else {\n                                    await fetch(\"login\", {\n                                        method: \"POST\",\n                                        headers: {\n                                            Accept: \"application/json\",\n                                            \"Content-Type\": \"application/json\",\n                                        },\n                                        body: JSON.stringify(loginForm),\n                                    }).then((response) => {\n                                        if (response.status === 200) {\n                                            const token = response.jwt;\n                                            localStorage.setItem(\"token\", token);\n                                            window.location.href = \"/home\";\n                                        } else {\n                                            setError(\"Invalid credentials\");\n                                        }\n                                    });\n                                }\n                            }}\n                        >\n                            Log in\n                        </Button>\n                        <p className=\"mt-3\">\n                            New to the platform?{\" \"}\n                            <a href=\"/register\" className=\"new-account-link\">\n                                Create an account\n                            </a>\n                        </p>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}